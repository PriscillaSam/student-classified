// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields:[userId], references:[id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Category {
  id           String   @id @default(cuid())
  name          String

  ads           Ad[]
}

model Ad {
 id             String    @id @default(cuid())
 description    String
 userId         String   @map("user_id")
 categoryId     String   @map("category_id")
 category       Category @relation(fields:[categoryId], references:[id] )
 seller         User     @relation(fields:[userId], references:[id], onDelete: Cascade)

 reviews        Review[]
}

model Session {
  id            String   @id @default(cuid())
  sessionToken  String   @unique@map("session_token")
  userId        String   @map("user_id")
  expires       DateTime
  user          User     @relation(fields:[userId], references:[id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?@unique
  emailVerified DateTime?
  image         String?

  accounts      Account[]
  sessions      Session[]
  ads           Ad[]
  reviews       Review[]
}


model Review {
  id             String    @id @default(cuid())
  note           String?
  rating         Int
  userId         String    @map("user_id")
  adId           String    @map("ad_id")
  ad             Ad        @relation(fields:[adId], references:[id] )
  seller         User      @relation(fields:[userId], references:[id], onDelete: Cascade)
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}